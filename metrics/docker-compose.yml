networks:
  traefik-net:
    external: true

volumes:
  prometheus-data:
  grafana-data:
  loki-data:

services:
  ################################################
  ##                 Prometheus                 ##
  ## Monitoring system and time series database ##
  ################################################
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    networks:
    - traefik-net
    command:
    - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
    - "./config/prometheus.yaml:/etc/prometheus/prometheus.yml:ro"
    - "prometheus-data:/prometheus"
    # ports:
    # - "9090:9090"
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.prometheus.rule=Host(`metrics.larsluph.dev`)"
    - "traefik.http.routers.prometheus.entrypoints=websecure"
    - "traefik.http.routers.prometheus.tls=true"
    - "traefik.http.routers.prometheus.middlewares=authentik@file"

  ###########################################
  ##           Grafana Dashboard           ##
  ## The open and composable observability ##
  ##    and data visualization platform    ##
  ###########################################
  grafana:
    image: grafana/grafana-enterprise:11.6.0
    container_name: grafana
    restart: unless-stopped
    networks:
    - traefik-net
    volumes:
    - "./config/grafana.ini:/etc/grafana/grafana.ini:ro"
    - "./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml:ro"
    - "grafana-data:/var/lib/grafana"
    environment:
    - GF_SECURITY_ADMIN_USER=grafana
    - GF_SECURITY_ADMIN_PASSWORD=grafana
    # ports:
    # - "3000:3000"
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.grafana.rule=Host(`dashboards.larsluph.dev`)"
    - "traefik.http.routers.grafana.entrypoints=websecure"
    - "traefik.http.routers.grafana.tls=true"
    - "traefik.http.routers.grafana.middlewares=authentik@file"

  ###################################
  ##          Grafana Loki         ##
  ## Like Prometheus, but for logs ##
  ###################################
  loki:
    image: grafana/loki:3.4
    container_name: loki
    restart: unless-stopped
    networks:
    - traefik-net
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
    - "./config/loki.yaml:/etc/loki/local-config.yaml:ro"
    # - "loki-data:/loki"
    ports:
    - "3100:3100"
    # labels:
    # - "traefik.enable=true"
    # - "traefik.http.routers.loki.rule=Host(`logs.larsluph.dev`)"
    # - "traefik.http.routers.loki.entrypoints=websecure"
    # - "traefik.http.routers.loki.tls=true"
    # - "traefik.http.routers.loki.middlewares=authentik@file"

  ##########################################
  ##             Grafana Alloy            ##
  ## OpenTelemetry Collector distribution ##
  ##      with programmable pipelines     ##
  ##########################################
  alloy:
    image: grafana/alloy:v1.8.1
    container_name: alloy
    restart: unless-stopped
    depends_on:
    - loki
    networks:
    - traefik-net
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    volumes:
    - "./config/alloy.alloy:/etc/alloy/config.alloy:ro"
    - "./logs:/tmp/app-logs"
    ports:
    - "12345:12345"

#  tempo:
#    image: grafana/tempo:latest
#    container_name: grafana-tempo
#    networks:
#    - traefik-net
#    ports:
#    - "4317:4317" # gRPC
#    - "4318:4318" # HTTP
#    - "3200:3200" # Tempo UI
#    volumes:
#    - "./tempo:/tmp/tempo"
