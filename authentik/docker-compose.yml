networks:
  traefik-net:
    external: true

services:
  postgresql:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    networks:
      - traefik-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - "./pg-data:/var/lib/postgresql/data"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
  redis:
    image: docker.io/library/redis:alpine
    container_name: redis
    restart: unless-stopped
    command: --save 60 1 --loglevel warning
    networks:
      - traefik-net
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - "./redis-data:/data"

  worker:
    image: ghcr.io/goauthentik/server:${AUTHENTIK_VERSION_TAG}
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    networks:
      - traefik-net
    depends_on:
      - postgresql
      - redis
    environment:
      AUTHENTIK_ERROR_REPORTING__ENABLED: true
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
      AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    user: root
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./media:/media"
      - "./certs:/certs"
      - "./custom-templates:/templates"

  server:
    image: ghcr.io/goauthentik/server:${AUTHENTIK_VERSION_TAG}
    container_name: authentik-server
    restart: unless-stopped
    command: server
    networks:
      - traefik-net
    depends_on:
      - postgresql
      - redis
    environment:
      AUTHENTIK_ERROR_REPORTING__ENABLED: true
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${POSTGRES_USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
      AUTHENTIK_POSTGRESQL__NAME: ${POSTGRES_DB}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
    volumes:
      - "./media:/media"
      - "./custom-templates:/templates"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.authentik.loadbalancer.server.port=9000"

      - "traefik.http.routers.authentik.rule=Host(`idp.larsluph.dev`) || PathPrefix(`/outpost.goauthentik.io/`)"
      - "traefik.http.routers.authentik.entrypoints=websecure"
      - "traefik.http.routers.authentik.tls=true"
